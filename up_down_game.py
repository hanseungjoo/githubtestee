# 플레이어와 컴퓨터가 참여하는 업다운 게임을 만드세요.
# 프로그램은 다음과 같은 기능을 포함해야 합니다.
#     - 컴퓨터는 1부터 100 사이의 랜덤한 숫자를 생성합니다. 했고
#     - 플레이어는 숫자를 입력하고,/ 입력한 숫자와 컴퓨터의 숫자를 비교하여 "업" 또는 "다운" 힌트를 제공합니다.
#     - 플레이어가 컴퓨터의 숫자를 정확히 맞히면 시도한 횟수를 알려줍니다.
#     - 플레이어가 숫자를 맞힐 때까지 위 과정을 반복합니다.
# 1. 플레이어가 입력한 숫자가 범위를 벗어날 경우, 적절한 안내 메시지를 출력하여 유효한 범위 내의 숫자를 입력하도록 유도하세요.
# 2. 플레이어가 게임을 반복하고 싶을 경우, 게임 재시작 여부를 묻고 그에 따라 게임을 초기화하거나 종료하는 기능을 추가하세요.
# 3. 게임이 종료될 때 플레이어의 최고 시도 횟수를 기록하고, 다음 게임에서 이를 표시하는 기능을 구현하세요.

# ------------------------------------------------------------------
# - input을 이용해서 사용자의 입력을 받을 수 있는가?
# - input으로 받은 값을 string에서 int로 바꿀 수 있는가?
# - while문을 사용하고 특정조건에서 break를 걸어서 멈출 수 있는가?
# - if문을 이용해서 조건에 따른 코드 실행을 바꿀 수 있는가?


# a = input('숫자를 입력하세용')
# print(f'첫번째로 입력하신것은:{a}입니다.')


# 플레이어는 숫자를 입력하고,/ 입력한 숫자와 컴퓨터의 숫자를 비교하여 "업" 또는 "다운" 힌트를 제공합니다.
# 숫자를 입력해봐, 만약에 입력 숫자가 컴퓨터의 숫자보다 크다면(다운이라고 출력해), 또 만약에 입력숫자가 컴퓨터의 숫자보다 작다면(업이라고 출력해)
# 또 만약에 입력 숫자가 컴퓨터의 숫자와 같다면(정답입니다! 를 출력해)


def number_game():
    import random
    computer_number = random.randint(1, 100)
    # print(computer_number)
    count = 0
    while True:
        input_number = input("숫자를 입력하세요: ")
        input_number = int(input_number)
        count = count + 1

        if input_number > computer_number:
            print('down')
        elif input_number < computer_number:
            print('up')
        elif input_number == computer_number:
            print('정답!')
            print(f'{count}회 만에 맞추셨습니다')
            break



def reply():
    while True:
        answer = input("다시할래? (ㅇㅇ/ㄴㄴ): ")  # 다시할래를 물어봄.
        if answer == 'ㅇㅇ':  # 응 이라고 대답하면
            number_game()  # 게임을 다시 시작한다.
        elif answer == 'ㄴㄴ':
            print('게임을 종료합니다')
            break
        elif answer != 'ㅇㅇ' and 'ㄴㄴ':  # 그렇지 않으면
            print('올바른 답을 입력하세요')


def real_game():
    while True:
        number_game()
        if not reply():
            break


real_game()


# 만약 사용자가 y를 입력한다면,

# 1. 게임이 끝난다면, ('다시 할래?(y/n)'를 출력하자) =>> 하지만 게임은 반복되면 안 됨.
# 1-1. 게임이 끝나고, 질문이 나온다.? 하하하하ㅏ하하ㅏ하
# 2. 만약 사용자가 'y'를 입력하면, 게임을 다시.......?
# 3. 만약 사용자가 'n'을 입력하면, '게임을 종료합니다'를 출력하자


# 플레이어가 컴퓨터의 숫자를 정확히 맞히면/ 시도한 횟수를 알려줍니다.
# 1. 박스 만들기(어디에???????)
# 2. 시도할 때마다 카운팅하기(박스에 숫자를 하나씩 넣어주는?)
# 3. 컴퓨터와 숫자가 똑같다면 프린트하기

# 2. 플레이어가 게임을 반복하고 싶을 경우,
# 게임 재시작 여부를 묻고 그에 따라 게임을 초기화하거나 종료하는 기능을 추가하세요.
# 다시 하시겠습니까? (y/n): n
# 게임을 종료합니다
